go.property("acquire_input_focus", true)

local LEFT_MOUSE = hash("mouse_button_left")
local MIDDLE_MOUSE = hash("mouse_button_middle")
local RIGHT_MOUSE = hash("mouse_button_right")
local WHEEL_UP = hash("mouse_wheel_up")
local WHEEL_DOWN = hash("mouse_wheel_down")
local TEXT = hash("text")
local KEY_SHIFT = hash("key_shift")
local KEY_CTRL = hash("key_ctrl")
local KEY_ALT = hash("key_alt")
local KEY_SUPER = hash("key_super")

function init(self)
	if self.acquire_input_focus then
		msg.post(".", "acquire_input_focus")
	end
	self.actions = {}
	self.mouse = {
		x = 0,
		y = 0,
		wheel = 0,
		buttons = {},
	}
end

function final(self)
	if self.acquire_input_focus then
		msg.post(".", "release_input_focus")
	end
end

function update(self, dt)
	local w, h = window.get_size()
	imgui.set_display_size(w, h)

	imgui.set_mouse_input(
		self.mouse.x, h - self.mouse.y,
		self.mouse.buttons[LEFT_MOUSE] or 0,
		self.mouse.buttons[MIDDLE_MOUSE] or 0,
		self.mouse.buttons[RIGHT_MOUSE] or 0,
		self.mouse.wheel
	)
end

-- order MUST match enums in ImGuiKey_
local IMGUI_KEYS = {
	"key_tab",
	"key_left",
	"key_right",
	"key_up",
	"key_down",
	"key_pageup",
	"key_pagedown",
	"key_home",
	"key_end",
	"key_insert",
	"key_delete",
	"key_backspace",
	"key_space",
	"key_enter",
	"key_esc",
	"key_numpad_enter",
	"key_a",
	"key_c",
	"key_v",
	"key_x",
	"key_y",
	"key_z",
}

-- map action_id (key) to ImGuiKey_ enums
local IMGUI_KEYMAP = {}
for i=1,#IMGUI_KEYS do
	local key = IMGUI_KEYS[i]
	IMGUI_KEYMAP[hash(key)] = i - 1
end


function on_input(self, action_id, action)
	if action_id == LEFT_MOUSE or action_id == MIDDLE_MOUSE or action_id == RIGHT_MOUSE then
		if action.pressed then
			self.mouse.buttons[action_id] = 1
		elseif action.released then
			self.mouse.buttons[action_id] = 0
		end
	elseif action_id == WHEEL_UP then
		self.mouse.wheel = action.value
	elseif action_id == WHEEL_DOWN then
		self.mouse.wheel = -action.value
	elseif action_id == TEXT then
		imgui.add_input_character(action.text)
	elseif action_id == KEY_SHIFT then
		if action.pressed or action.released then
			imgui.set_key_modifier_shift(action.pressed == true)
		end
	elseif action_id == KEY_CTRL then
		if action.pressed or action.released then
			imgui.set_key_modifier_ctrl(action.pressed == true)
		end
	elseif action_id == KEY_ALT then
		if action.pressed or action.released then
			imgui.set_key_modifier_alt(action.pressed == true)
		end
	elseif action_id == KEY_SUPER then
		if action.pressed or action.released then
			imgui.set_key_modifier_super(action.pressed == true)
		end
	else
		if action.pressed or action.released then
			local key = IMGUI_KEYMAP[action_id]
			if key then
				imgui.set_key_down(key, action.pressed == true)
			end
		end
	end

	if not action_id then
		self.mouse.x = action.screen_x
		self.mouse.y = action.screen_y
	end
end
